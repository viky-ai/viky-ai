stages:
  - build
  - test
  - docker_tag
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: none
  DOCKER_IMAGE_APP: $CI_REGISTRY_IMAGE/app
  DOCKER_IMAGE_NLP: $CI_REGISTRY_IMAGE/nlp
  DOCKER_IMAGE_TOOLS_BACKUP: $CI_REGISTRY_IMAGE/tools_backup
  DOCKERHUB_IMAGE_NLP: "vikyai/nlp"
  DOCKERHUB_IMAGE_APP: "vikyai/app"
  DOCKERHUB_IMAGE_TOOLS_BACKUP: "vikyai/tools_backup"
  DOCKERHUB_IMAGE_DOC: vikyai/doc

image: vikyai/tools-gitlab-auto-deploy-image:latest
before_script:
  - if [ "${TRACE:-false}" == "true" ] ; then  set -x ; fi
  # load auto-deploy if exits (not in test)
  - if [ -f /auto-deploy.sh ] ; then . /auto-deploy.sh ; fi

.kubernetes_runner:
  tags:
    - kubernetes
  variables:
    CI_SERVICE_HOST: "127.0.0.1"

# Build docker image
build_backup:
  extends: .kubernetes_runner
  stage: build
  script:
    - docker_build ${DOCKER_IMAGE_TOOLS_BACKUP} docker/backup

build_webapp:
  extends: .kubernetes_runner
  stage: build
  script:
    - docker_build ${DOCKER_IMAGE_APP}      webapp "--target image_ruby_run"
    - docker_build ${DOCKER_IMAGE_APP}_test webapp "--target image_ruby_test"

build_nlp:
  extends: .kubernetes_runner
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - docker_build ${DOCKER_IMAGE_NLP}      nlp "--target run_image"
    - docker_build ${DOCKER_IMAGE_NLP}_test nlp "--target test_image"

# Test
test_webapp:
  extends: .kubernetes_runner
  stage: test
  image: ${DOCKER_IMAGE_APP}_test:${CI_COMMIT_REF_SLUG}
  needs:
    - "build_webapp"
  variables:
    POSTGRES_USER: superman
    POSTGRES_PASSWORD: sup_3rman
    POSTGRES_DB: vikyapp_test
    ES_JAVA_OPTS: "-Xms128m -Xmx392m"
  services:
    - postgres:11.5-alpine
    - redis:5.0-alpine
    - name: selenium/standalone-chrome:3.141.59
      alias: selenium-chrome
    - name: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
      # Important other wise, port 9200 will never be exposed
      command:
        [
          "bin/elasticsearch",
          "-Ediscovery.type=single-node",
          "-Enetwork.host=0.0.0.0",
        ]
      alias: elasticsearch
  script:
    - export VIKYAPP_DB_USERNAME="${POSTGRES_USER}"
    - export VIKYAPP_DB_PASSWORD="${POSTGRES_PASSWORD}"
    - export VIKYAPP_DB_HOST="${CI_SERVICE_HOST:-postgres}"
    - export VIKYAPP_ACTIONCABLE_REDIS_URL="redis://${CI_SERVICE_HOST:-redis}:6379/1"
    - export VIKYAPP_ACTIVEJOB_REDIS_URL="redis://${CI_SERVICE_HOST:-redis}:6379/2"
    - export VIKYAPP_STATISTICS_URL="http://${CI_SERVICE_HOST:-elasticsearch}:9200"
    - export SELENIUM_REMOTE_URL="http://${CI_SERVICE_HOST:-selenium-chrome}:4444/wd/hub/"
    - export VIKYAPP_STATISTICS_NO_REPLICA="true"
    - cd /webapp
    - if [ "${SKIP_TEST:-false}" != "true" ] ; then ./bin/docker_run_test.sh ; fi
  artifacts:
    # expire_in: 1 week
    reports:
      junit: "reports/TEST-*.xml"

test_nlp:
  extends: .kubernetes_runner
  stage: test
  needs:
    - "build_nlp"
  image: ${DOCKER_IMAGE_NLP}_test:${CI_COMMIT_REF_SLUG}
  services:
    - redis:5.0-alpine
  variables:
    GIT_STRATEGY: none
  script:
    - export VIKYAPP_REDIS_PACKAGE_NOTIFIER="redis://${CI_SERVICE_HOST:-redis}:6379/3"
    - if [ "${SKIP_TEST:-false}" != "true" ] ; then /docker_run_test.sh ; fi
  artifacts:
    # expire_in: 1 week
    reports:
      junit:
        - "reports/TEST-*.xml"

# Tag docker image to lasted
tag_latest:
  extends: .kubernetes_runner
  stage: docker_tag
  variables:
    GIT_STRATEGY: none
  only:
    refs:
      - master
  except:
    refs:
      - tags
  script:
    - docker_tag_latest ${DOCKER_IMAGE_APP}
    - docker_tag_latest ${DOCKER_IMAGE_NLP}
    - docker_tag_latest ${DOCKER_IMAGE_TOOLS_BACKUP}

# Push Docker image to Dockerhub only when on Master and it's a Tag
.push_dockerhub:
  extends: .kubernetes_runner
  stage: docker_tag
  environment:
    name: viky-ai-production
  script:
    - export VIKY_GITLAB_TAG="${CI_COMMIT_REF_SLUG:-latest}"
    - docker_push_gitlab_to_dockerhub "${DOCKER_IMAGE_NLP}:${VIKY_GITLAB_TAG}"          "${DOCKERHUB_IMAGE_NLP}:${VIKY_DOCKERHUB_TAG}"
    - docker_push_gitlab_to_dockerhub "${DOCKER_IMAGE_APP}:${VIKY_GITLAB_TAG}"          "${DOCKERHUB_IMAGE_APP}:${VIKY_DOCKERHUB_TAG}"
    - docker_push_gitlab_to_dockerhub "${DOCKER_IMAGE_TOOLS_BACKUP}:${VIKY_GITLAB_TAG}" "${DOCKERHUB_IMAGE_TOOLS_BACKUP}:${VIKY_DOCKERHUB_TAG}"

push_dockerhub_master:
  extends: .push_dockerhub
  stage: docker_tag
  only:
    refs:
      - master
    variables:
      - $DOCKER_HUB_LOGIN
      - $DOCKER_HUB_PASSWORD
  variables:
    VIKY_DOCKERHUB_TAG: "latest"
  environment:
    name: viky-ai-production

push_dockerhub_tag:
  extends: .push_dockerhub
  stage: docker_tag
  only:
    refs:
      - tags
  variables:
    VIKY_DOCKERHUB_TAG: ${CI_COMMIT_TAG}
  environment:
    name: viky-ai-production

push_dockerhub_saas:
  extends: .push_dockerhub
  stage: docker_tag
  only:
    refs:
      - saas
  variables:
    VIKY_DOCKERHUB_TAG: "saas"

deploy_dev:
  extends: .kubernetes_runner
  only:
    variables:
      - $DEPLOY_GITLAB_CI_URL_DEV_B64
  except:
    refs:
      - saas
      - tags
  environment:
    name: dev-${CI_COMMIT_REF_SLUG}
    url: https://viky-${CI_ENVIRONMENT_SLUG}-kube.viky.ai
    # TODO trigger auto delete env with api env stop : https://docs.gitlab.com/ee/api/environments.html#stop-an-environment
    #on_stop: delete_env
  extends: .kubernetes_runner
  stage: deploy
  script:
    - |
      # Deploy to dev
      export VIKY_DOCKER_TAG="${CI_COMMIT_REF_SLUG}"
      if [ "${VIKY_DOCKER_TAG}" == "master" ] ; then VIKY_DOCKER_TAG="latest" ; fi
      export DEPLOY_GITLAB_CI_URL=$(echo "${DEPLOY_GITLAB_CI_URL_DEV_B64}" | base64 -d)
      curl --show-error --silent --output /dev/null -X POST \
      -F token=${DEPLOYMENT_TOKEN_DEV} \
      -F ref=master \
      -F variables[VIKY_DEPLOY_NAME]=${CI_ENVIRONMENT_SLUG} \
      -F variables[VIKY_DOCKER_TAG]=${VIKY_DOCKER_TAG} \
      -F variables[DOCKER_IMAGE_DOC_TAG]=latest \
      -F variables[NOTIFY_DEPLOYMENT_INFO]=${CI_COMMIT_SHORT_SHA} \
      "${DEPLOY_GITLAB_CI_URL}"

deploy_production:
  extends: .kubernetes_runner
  only:
    refs:
      - saas
    variables:
      - $DEPLOY_GITLAB_CI_URL_PROD_B64
  except:
    refs:
      - tags
  environment:
    name: viky-ai-production
    url: https://www.viky.ai
  stage: deploy
  script:
    - |
      # Deploy to production
      export DEPLOY_GITLAB_CI_URL=$(echo "${DEPLOY_GITLAB_CI_URL_PROD_B64}" | base64 -d)
      curl --show-error --silent --output /dev/null -X POST \
      -F token=${DEPLOYMENT_TOKEN_PROD} \
      -F ref=master \
      -F variables[VIKY_DEPLOY_NAME]=viky-ai-production \
      -F variables[VIKY_DOCKER_TAG]=saas \
      -F variables[DOCKER_IMAGE_DOC_TAG]=saas \
      -F variables[NOTIFY_DEPLOYMENT_INFO]=${CI_COMMIT_SHORT_SHA} \
      "${DEPLOY_GITLAB_CI_URL}"
